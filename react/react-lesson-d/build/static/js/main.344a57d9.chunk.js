(this["webpackJsonpreact-lesson-d"] = this["webpackJsonpreact-lesson-d"] || []).push([[0], [, , , , function (e, t, a) { e.exports = a(11) }, , , , , function (e, t, a) { }, function (e, t, a) { }, function (e, t, a) { "use strict"; a.r(t); var n = a(0), r = a.n(n), o = a(3), c = a.n(o), s = (a(9), a(1)); a(10); var l = function () { var e = Object(n.useState)(""), t = Object(s.a)(e, 2), a = t[0], o = t[1], c = Object(n.useState)(""), l = Object(s.a)(c, 2), u = l[0], i = l[1], m = Object(n.useState)(""), d = Object(s.a)(m, 2), p = d[0], f = d[1]; return r.a.createElement("div", { className: "App" }, r.a.createElement("form", null, "Username: ", r.a.createElement("input", { type: "text", defaultValue: "", onChange: function (e) { o(e.target.value) } }), r.a.createElement("br", null), "Password: ", r.a.createElement("input", { type: "password", defaultValue: "", onChange: function (e) { i(e.target.value) }, pattern: "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}", title: "Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters", required: !0 }), r.a.createElement("br", null), r.a.createElement("input", { type: "submit", value: "Submit", onClick: function () { f("username" == a && "Trythis1" == u ? "Login successful. Username: ".concat(a, ". Password: ").concat(u, ".") : "Login failed.") } })), p) }; Boolean("localhost" === window.location.hostname || "[::1]" === window.location.hostname || window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)); c.a.render(r.a.createElement(r.a.StrictMode, null, r.a.createElement(l, null)), document.getElementById("root")), "serviceWorker" in navigator && navigator.serviceWorker.ready.then((function (e) { e.unregister() })).catch((function (e) { console.error(e.message) })) }], [[4, 1, 2]]]);
//# sourceMappingURL=main.344a57d9.chunk.js.map